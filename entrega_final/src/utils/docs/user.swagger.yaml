openapi: 3.0.0
info:
  title: Documentación de usuarios
  version: 1.0.0
  description: API para la gestión de usuarios

paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexión con la base de datos
    post:
      summary: Crear Usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
      responses:
        "200":
          description: Crear un usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    $ref: '#/components/schemas/User'  
        "500":
          description: Todos los campos son obligatorios o el email ya existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "Los datos del usuario son inválidos"
  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario a obtener
      responses:
        "200":
          description: Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object  
                    $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "User not found"
    put:
      summary: Actualiza un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
      responses:
        "200":
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: "User updated"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "User not found"
    delete:
      summary: Elimina un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario a eliminar
      responses:
        "200":
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: "User deleted"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "User not found"

components:
  schemas:
    User:
      type: object
      properties: 
        _id:
          type: string
          description: id autogenerado por mongo
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        role:
          type: string
          description: Rol del usuario (user, admin, premium)
          example: user
    createUser:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:  
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario
          example: "coder123"